// prisma/schema.prisma

// 1. Veritabanı bağlantısı
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 2. Prisma Client jeneratörü
generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      Role      @default(USER)    
  createdAt DateTime  @default(now())

  posts     Post[]    @relation("UserPosts")
  comments  Comment[] @relation("UserComments")
  followers Follow[] @relation("FollowingRelation")
  followings Follow[] @relation("FollowerRelation")
  likes      Like[]

}


model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())

  author    User      @relation("UserPosts", fields: [authorId], references: [id])
  authorId  Int
  likes      Like[]

  comments  Comment[] @relation("PostComments")

}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())

  post      Post      @relation("PostComments", fields: [postId], references: [id])
  postId    Int

  author    User      @relation("UserComments", fields: [authorId], references: [id])
  authorId  Int
}


model Follow {
  followerId  Int
  followingId Int
  createdAt   DateTime @default(now())

  follower   User @relation("FollowerRelation", fields: [followerId], references: [id])
  following  User @relation("FollowingRelation", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

